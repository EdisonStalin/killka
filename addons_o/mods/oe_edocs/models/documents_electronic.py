# -*- coding: utf-8 -*-

from odoo import models, api, fields, _

class DocumentsElectronicBatch(models.Model):
    _name = "document.electronic.batch"
    _description = 'Electronic documents by batch'
    
    date = fields.Date(string='Emission Date', default=fields.Date.context_today, help="Keep empty to use the current date")
    authorization_id = fields.Many2one('account.authorization', string='Authorization', change_default=True, required=True)
    number = fields.Char(readonly=True, size=9, copy=False)
    internal_number = fields.Integer(default=0, copy=False)
    name = fields.Char(string='Reference/Description', required=True, default=_('New'), help='The name that will be used on transport permit')
    access_key = fields.Char('Access key', size=49, required=True, help='Access code generated by the company to be validated')
    invoice_ids = fields.One2many('account.invoice', 'batch_id', string='Documents Electronic')
    company_id = fields.Many2one('res.company', string='Company', required=True, default=lambda self: self.env.user.company_id)
    user_id = fields.Many2one('res.users', string='Responsible', required=True, default=lambda self: self.env.user)


    @api.model
    def create(self, vals):
        if 'access_key' not in vals:
            vals['access_key'] = self.authorization_id.generation_access_key(self.name, self.type_document_id, self.date)
        return super(DocumentsElectronicBatch, self).create(vals)
    
    def get_values(self):
        vals = {
            'date': fields.Date.context_today(self),
            'authorization_id': self.
        }
        return vals